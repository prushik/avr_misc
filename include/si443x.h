#define SI443X_REG_DEV_TYPE 0x00
#define SI443X_REG_DEV_VERSION 0x01
#define SI443X_REG_DEV_STATUS 0x02

#define SI443X_REG_INT_STATUS1 0x03
#define SI443X_REG_INT_STATUS2 0x04
#define SI443X_REG_INT_ENABLE1 0x05
#define SI443X_REG_INT_ENABLE2 0x06
#define SI443X_REG_STATE 0x07
#define SI443X_REG_OPERATION_CONTROL 0x08

#define SI443X_REG_GPIO0_CONF 0x0B
#define SI443X_REG_GPIO1_CONF 0x0C
#define SI443X_REG_GPIO2_CONF 0x0D
#define SI443X_REG_IOPORT_CONF 0x0E

#define SI443X_REG_IF_FILTER_BW 0x1C
#define SI443X_REG_AFC_LOOP_GEARSHIFT_OVERRIDE 0x1D
#define SI443X_REG_AFC_TIMING_CONTROL 0x1E
#define SI443X_REG_CLOCK_RECOVERY_GEARSHIFT 0x1F
#define SI443X_REG_CLOCK_RECOVERY_OVERSAMPLING 0x20
#define SI443X_REG_CLOCK_RECOVERY_OFFSET2 0x21
#define SI443X_REG_CLOCK_RECOVERY_OFFSET1 0x22
#define SI443X_REG_CLOCK_RECOVERY_OFFSET0 0x23
#define SI443X_REG_CLOCK_RECOVERY_TIMING_GAIN1 0x24
#define SI443X_REG_CLOCK_RECOVERY_TIMING_GAIN0 0x25
#define SI443X_REG_RSSI 0x26
#define SI443X_REG_RSSI_THRESHOLD 0x27

#define SI443X_REG_AFC_LIMITER 0x2A
#define SI443X_REG_AFC_CORRECTION_READ 0x2B

#define SI443X_REG_DATAACCESS_CONTROL 0x30
#define SI443X_REG_EZMAC_STATUS 0x31
#define SI443X_REG_HEADER_CONTROL1 0x32
#define SI443X_REG_HEADER_CONTROL2 0x33
#define SI443X_REG_PREAMBLE_LENGTH 0x34
#define SI443X_REG_PREAMBLE_DETECTION 0x35
#define SI443X_REG_SYNC_WORD3 0x36
#define SI443X_REG_SYNC_WORD2 0x37
#define SI443X_REG_SYNC_WORD1 0x38
#define SI443X_REG_SYNC_WORD0 0x39
#define SI443X_REG_TRANSMIT_HEADER3 0x3A
#define SI443X_REG_TRANSMIT_HEADER2 0x3B
#define SI443X_REG_TRANSMIT_HEADER1 0x3C
#define SI443X_REG_TRANSMIT_HEADER0 0x3D

#define SI443X_REG_PKG_LEN 0x3E

#define SI443X_REG_CHECK_HEADER3 0x3F
#define SI443X_REG_CHECK_HEADER2 0x40
#define SI443X_REG_CHECK_HEADER1 0x41
#define SI443X_REG_CHECK_HEADER0 0x42

#define SI443X_REG_RECEIVED_HEADER3 0x47
#define SI443X_REG_RECEIVED_HEADER2 0x48
#define SI443X_REG_RECEIVED_HEADER1 0x49
#define SI443X_REG_RECEIVED_HEADER0 0x4A

#define SI443X_REG_RECEIVED_LENGTH 0x4B

#define SI443X_REG_CHARGEPUMP_OVERRIDE 0x58
#define SI443X_REG_DIVIDER_CURRENT_TRIM 0x59
#define SI443X_REG_VCO_CURRENT_TRIM 0x5A

#define SI443X_REG_AGC_OVERRIDE 0x69

#define SI443X_REG_TX_POWER 0x6D
#define SI443X_REG_TX_DATARATE1 0x6E
#define SI443X_REG_TX_DATARATE0 0x6F

#define SI443X_REG_MODULATION_MODE1 0x70
#define SI443X_REG_MODULATION_MODE2 0x71

#define SI443X_REG_FREQ_DEVIATION 0x72
#define SI443X_REG_FREQ_OFFSET1 0x73
#define SI443X_REG_FREQ_OFFSET2 0x74
#define SI443X_REG_FREQBAND 0x75
#define SI443X_REG_FREQCARRIER_H 0x76
#define SI443X_REG_FREQCARRIER_L 0x77

#define SI443X_REG_FREQCHANNEL 0x79
#define SI443X_REG_CHANNEL_STEPSIZE 0x7A

#define SI443x_REG_TX_FIFO_CONTROL_1 0x7C
#define SI443x_REG_TX_FIFO_CONTROL_2 0x7D
#define SI443x_REG_RX_FIFO_CONTROL 0x7E
#define SI443X_REG_FIFO 0x7F

#define SI443X_MODE_READY 0x01
#define SI443X_MODE_TUNE 0x02
#define SI443X_MODE_RX 0x04
#define SI443X_MODE_TX 0x08

// These functions implement si443x "burst" write and read
void si443x_write(uint8_t reg, const uint8_t *value, uint8_t len);
void si443x_read(uint8_t reg, uint8_t *out, uint8_t len);

// Initialize and set up starting registers
void si443x_init();

// These functions set the radio frequency
// the _mhz version is recommended for MCUs as it avoids words larger than a register pair
void si443x_set_frequency_hz(unsigned long int freq);
void si443x_set_frequency_mhz(uint16_t freq_mhz);

// Function to set mode
void si443x_set_mode(uint8_t mode);

// Function to configure ezmac(r) address (header)
void si443x_set_hw_address(uint8_t *addr, uint8_t len);

void si443x_set_baud(uint16_t kbps);
